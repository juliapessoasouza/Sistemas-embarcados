1-
a)
#include <stdio.h>
FILE *fp = fopen(char *caminho, char *modo);

b)
Na biblioteca #include <stdio.h>

int fprintf(FILE *fp, const char *formato, ...);
int fputc(int c, FILE *fp);
int putc (int c, FILE * fp);
int fputs(const char *s, FILE *fp);
size_t fwrite(const void *ptr, size_t nbytes, size_t qtd, FILE *fp);

c)
Na biblioteca #include <stdio.h>

int fscanf ( FILE *fp, char *formato, ... );
int fgetc(FILE *fp);
int getc(FILE *fp);
char *fgets(char *s, int nbytes, FILE *fp);
size_t fread(void *ptr, size_t nbytes, size_t qtd, FILE *fp);

d)
#include <stdio.h>

int fseek (FILE *fp, long int offset, int origin);
void rewind (FILE *fp);
int fsetpos(FILE *fp, const fpos_t *pos);

e)
A biblioteca `stdio.h`.

2-
O POSIX (Interface Portátil para Sistemas Operacionais) é uma família de padrões
especificados pelo IEEE para manter a compabtibilidade entre sistemas
operacionais. Aonde são definidos vários aspectos como interface para
programação de aplicaçoes.

3-
a)
int open(const char *pathname, int flags, mode_t mode);
int close(int fildes);

b)
ssize_t write(int fd, const void *buf, size_t count);


c)
ssize_t read(int fd, void *buf, size_t count);

d)
off_t lseek(int fd, off_t offset, int whence);

e)
As bibliotecas são <sys/types.h>, <sys/stat.h>, <fcntl.h> e <unistd.h>.
