1-
#include <wiringPi.h>

#include <unistd.h>

wiringPi int main(){

int pin = 4;		
float val =500000;
if(wiringPiSetup()== -1)

return -1;


while(1){

	pinMode(pin, OUTPUT);

	digitalWrite(pin, LOW);

	usleep(val);

	digitalWrite(pin, HIGH);

	usleep(val);

		}


		return 0;
}


2-
#include <wiringPi.h>

#include <unistd.h>

#include <stdio.h>

#include <stdlib.h> wiringPi int main(){

	int pin = 4;	

	float f = 0, t = 0;

		if(wiringPiSetup()== -1)
	
		return -1;

		printf("Escolha uma frequÃªncia:\n");

		scanf("%f", &f);


		t = (1/(2*f))*1000000;


	while(1){
	
		pinMode(pin, OUTPUT);
	
		digitalWrite(pin, LOW);
	
		usleep(t);
	
		digitalWrite(pin, HIGH);
	
		usleep(t);

			}


			return 0;
} 


3-
#include <wiringPi.h>

#include <unistd.h>

#include <stdio.h>

#include <stdlib.h>

#include <string.h>

wiringPi
int main(){

	int led = 4, btn = 1, t = 0, tr = 0;

	float f = 1, T = 1;

	pid_t pid; 
	int fd[2];  	
	pid = fork(); 	
	pipe(fd); 	



	wiringPiSetup();


	if(pid == 0) //cria o processo filho

		{ 
	
			while(1)
	
			{
		
			close(fd[1]); 
			printf("Processo filho criado!\n");
		
			read(fd[0], &tr, sizeof(tr)); 		
			printf("Valor de t lido no filho: %d \n", tr);
		
			digitalWrite(led, LOW);
		
			usleep(tr);
		
			digitalWrite(led, HIGH);
		
			usleep(tr);
	}
}

			else 

				{
	printf("processo pai criado\n");
	
			while (1)
	
				{
		
				usleep(50000);
		
					if(digitalRead(btn)==1)
		
					{
			
					close(fd[0]); 			
					printf("Valor de t escrito: %d\n", t);
			
			
					f = 2*f;
			
						if(f>64)
				
						f = 1;
			
						T = (1/(2*f))*1000000;
			
						t = (int) T;
			
						write(fd[1], &t, sizeof(t)); 		}
}
}



						return 0;
}
